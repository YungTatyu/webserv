name: Format Code and Compile Test

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  # formatしてからbuild testしたいから一緒のgithub actionsにした
  # format codes
  format_code:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Install clang-format
      run: |
        sudo apt update || true
        sudo apt install -y clang-format

    - name: Install Black for Python 3
      run: |
        sudo apt install -y python3 python3-pip
        python3 -m pip install --upgrade pip
        python3 -m pip install black

    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Install shfmt
      run: |
        GO111MODULE=on go install mvdan.cc/sh/v3/cmd/shfmt@latest

    - name: Format code
      run: |
        make format

    - name: Check for changes
      id: format-changes
      run: |
        if git diff --exit-code; then
          echo "CHANGED=false" >> "$GITHUB_OUTPUT"
        else
          echo "CHANGED=true" >> "$GITHUB_OUTPUT"
        fi

    - name: Commit and push changes
      if: steps.format-changes.outputs.CHANGED == 'true'
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: ":recycle: auto-format code"

  # build test
  build-macos:
    if: github.event.pull_request.draft == false
    name: Build on macOS
    runs-on: macos-latest
    needs: format_code

    steps:
    - uses: actions/checkout@v2

    - name: Run make (macOS)
      run: make

  build-ubuntu:
    if: github.event.pull_request.draft == false
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    needs: format_code

    steps:
    - uses: actions/checkout@v2

    - name: Run make (Ubuntu)
      run: make